---

- name: "Create funkwhale user"
  user:
    name: "{{ funkwhale_username }}"
    shell: /bin/false
    home: "{{ funkwhale_install_path }}"

- name: "Create funkwhale directories"
  become: true
  file:
    path: "{{ item }}"
    owner: "{{ funkwhale_username }}"
    state: directory
    recurse: true
  with_items:
    - "{{ funkwhale_install_path }}"
    - "{{ funkwhale_media_path }}"
    - "{{ funkwhale_static_path }}"
    - "{{ funkwhale_music_path }}"
    - "{{ funkwhale_config_path }}"

- name: "Create funkwhale configuration file"
  become: true
  become_user: "{{ funkwhale_username }}"
  template:
    src: env.j2
    dest: "{{ funkwhale_config_path }}/.env"
    owner: "{{ funkwhale_username }}"
  vars:
    secret_key: secret_key

- name: Download front-end files
  become: true
  become_user: "{{ funkwhale_username }}"
  unarchive:
    src: https://dev.funkwhale.audio/funkwhale/funkwhale/-/jobs/artifacts/{{ funkwhale_version }}/download?job=build_front
    dest: "{{ funkwhale_install_path }}"
    remote_src: true


- name: Download api files
  become: true
  become_user: "{{ funkwhale_username }}"
  unarchive:
    src: https://dev.funkwhale.audio/funkwhale/funkwhale/-/jobs/artifacts/{{ funkwhale_version }}/download?job=build_api
    dest: "{{ funkwhale_install_path }}"
    remote_src: true

- name: "Setup virtualenv"
  pip:
    name: wheel
    virtualenv: "{{ funkwhale_install_path }}/virtualenv"
    virtualenv_python: python3


- name: "Install python dependencies"
  pip:
    requirements: "{{ funkwhale_install_path }}/api/requirements.txt"
    virtualenv: "{{ funkwhale_install_path }}/virtualenv"
    virtualenv_python: python3
